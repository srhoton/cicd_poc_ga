name: Deploy to Amazon ECS

on:
  create:

env:
  AWS_REGION: us-east-1                   # set this to your preferred AWS region, e.g. us-west-1
    #ECR_REPOSITORY: cicd-poc           # set this to your Amazon ECR repository name
    #ECS_SERVICE: cicd_poc_service                 # set this to your Amazon ECS service name
    #ECS_CLUSTER: cicd_poc # set this to your                 # set this to your Amazon ECS cluster name
    #CONTAINER_NAME: cicd_poc           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

jobs:
  build-branch-infra:
    name: Build Branch Infrastructure
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
          
      - name: Terraform Init
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
          ENV_NAME: ${{ github.ref_name }}
        run: |
          cd application
          terraform init
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
          ENV_NAME: ${{ github.ref_name }}
        run: |
          cd infrastructure
          terraform workspace new $ENV_NAME || terraform workspace select $ENV_NAME
          terraform plan -var env_name=$ENV_NAME
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
          ENV_NAME: ${{ github.ref_name }}
        run: |
          cd infrastructure
          terraform workspace new $ENV_NAME || terraform workspace select $ENV_NAME
          terraform apply -auto-approve -var env_name=$ENV_NAME
