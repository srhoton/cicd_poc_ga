name: Deploy to Amazon ECS

on:
  push:
    tags:
      - 'v*'

env:
  AWS_REGION: us-east-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: cicd-poc           # set this to your Amazon ECR repository name
  ECS_SERVICE: cicd_poc                 # set this to your Amazon ECS service name
  ECS_CLUSTER: cicd_poc_service # set this to your                 # set this to your Amazon ECS cluster name
  #ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: cicd-poc           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.6.0

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_REF_NAME .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_REF_NAME
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_REF_NAME" >> $GITHUB_OUTPUT

          #- name: Fill in the new image ID in the Amazon ECS task definition
          #id: task-def
          #uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
          #with:
          #task-definition: ${{ env.ECS_TASK_DEFINITION }}
          #container-name: ${{ env.CONTAINER_NAME }}
          #image: ${{ steps.build-image.outputs.image }}

            #- name: Deploy Amazon ECS task definition
            #uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
            #with:
            #task-definition: ${{ steps.task-def.outputs.task-definition }}
            #service: ${{ env.ECS_SERVICE }}
            #cluster: ${{ env.ECS_CLUSTER }}
            # wait-for-service-stability: true
